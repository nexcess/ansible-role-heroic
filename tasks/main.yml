---

- name: Install Java + Deps
  package:
    state=latest
    name={{ item }}
  with_items: "{{ heroic_java_packages }}"

- name: Ensure Group Exists
  group:
    name={{ heroic_group }}
    state=present

- name: Ensure User Exists
  user:
    user={{ heroic_user }}
    group={{ heroic_group }}
    home={{ heroic_home }}
    state=present

- name: Get Heroic
  git:
    repo={{ heroic_git_repo }}
    dest={{ heroic_app_home }}
    version={{ heroic_git_branch }}
    update=no
  args:
    creates={{ heroic_app_home }}

- name: Tighten Up Ownership
  file:
    path={{ heroic_home }}
    owner={{ heroic_user }}
    group={{ heroic_group }}
    recurse=yes

- name: Build Repackaged JARs
  command: ./tools/install-repackaged
    chdir={{ heroic_app_home }}
    creates={{ heroic_app_home }}/repackaged/bigtable/target/bigtable-client-core-*.jar
  become: yes
  become_user: "{{ heroic_user }}"

- name: Build Heroic
  command: mvn clean package -D maven.test.skip=true
    chdir={{ heroic_app_home }}
    creates={{ heroic_app_home }}/heroic-dist/target/heroic-dist-0.0.1-SNAPSHOT-shaded.jar
  become: yes
  become_user: "{{ heroic_user }}"

- name: Install Config (Data)
  template:
    src=heroic-data.yml.j2
    dest={{ heroic_app_home }}/heroic-data.yml
    owner={{ heroic_user }}
    group={{ heroic_group }}
    mode=0600

- name: Install Config (API)
  template:
    src=heroic-api.yml.j2
    dest={{ heroic_app_home }}/heroic-api.yml
    owner={{ heroic_user }}
    group={{ heroic_group }}
    mode=0600

- name: Install Config (Consumer)
  template:
    src=heroic-consumer.yml.j2
    dest={{ heroic_app_home }}/heroic-consumer.yml
    owner={{ heroic_user }}
    group={{ heroic_group }}
    mode=0600

- name: Install Logging Config
  template:
    src=log4j.xml.j2
    dest={{ heroic_app_home }}/log4j.xml
    owner={{ heroic_user }}
    group={{ heroic_group }}
    mode=0600

- name: Make Log Dir
  file:
    path=/var/log/heroic
    owner={{ heroic_user }}
    group={{ heroic_group }}
    state=directory
    mode=0700

- name: Configure Cassandra Keyspace
  command: echo -e "exit\n" | tools/heroic-shell -P cassandra -X cassandra.seeds={{ heroic_cassandra_host_list }} -X datastax.configure
    chdir={{ heroic_app_home }}
  become: yes
  become_user: "{{ heroic_user }}"

- name: Configure Elasticsearch Metadata/Suggest
  command: echo -e "exit\n" | tools/heroic-shell -P elasticsearch-metadata -P elasticsearch-metadata -X elasticsearch.pattern="heroic-%s" -X elasticsearch.seeds={{ heroic_elasticsearch_host_list | join(',') }}
    chdir={{ heroic_app_home }}
  become: yes
  become_user: "{{ heroic_user }}"

- name: Configure Collectd Endpoint
  command: echo -e "exit\n" | tools/heroic-shell -P collectd -X collectd.host={{ heroic_collectd_host }} -X collectd.port={{ heroic_collectd_port }}
    chdir={{ heroic_app_home }}
  become: yes
  become_user: "{{ heroic_user }}"

- name: Install Heroic Control Script
  template:
    src=heroic.j2
    dest={{ heroic_app_home }}/heroic
    owner={{ heroic_user }}
    group={{ heroic_group }}
    mode=0700

- name: Install Heroic Systemd Script
  template:
    src=heroic.service.j2
    dest=/etc/systemd/system/heroic.service
    owner=root
    group=root
    mode=0644

- name: Reload Systemd
  command: systemctl daemon-reload

- name: Start Heroic
  service:
    name=heroic
    state=started
